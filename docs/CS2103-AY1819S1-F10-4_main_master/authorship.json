[
  {
    "path": "README.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d MeNUS"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:relfileprefix: docs/]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "_**M**anage your eatery menus **e**fficiently, in **NUS**._"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "https://travis-ci.org/CS2103-AY1819S1-F10-4/main[image:https://travis-ci.org/CS2103-AY1819S1-F10-4/main.svg?branch\u003dmaster[Build Status]]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "https://ci.appveyor.com/project/AZhiKai/main-j2jk6[image:https://ci.appveyor.com/api/projects/status/5kwkxt5khmfo0q31/branch/master?svg\u003dtrue[Build status]]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "https://coveralls.io/github/CS2103-AY1819S1-F10-4/main?branch\u003dmaster[image:https://coveralls.io/repos/github/CS2103-AY1819S1-F10-4/main/badge.svg?branch\u003dmaster[Coverage Status]]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "https://www.codacy.com/app/AZhiKai/organisation_main?utm_source\u003dgithub.com\u0026amp;utm_medium\u003dreferral\u0026amp;utm_content\u003dCS2103-AY1819S1-F10-4/main\u0026amp;utm_campaign\u003dBadge_Grade[image:https://api.codacy.com/project/badge/Grade/299f6df960044215a511a90d281af954[Codacy code quality]]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "image::docs/images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "ifndef::env-github[]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "image::images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* This is a desktop menu application. It has a GUI but most of the user interactions happen using a CLI (Command Line"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Interface) which is oriented for typist user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* It is a Java sample application intended for https://github.com/orgs/CS2103-AY1819S1-F10-4/people[students]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "learning Software Engineering in https://nus-cs2103-ay1819s1.github.io/cs2103-website/[CS2103T] at the http://www.nus.edu.sg/[National University of Singapore] (NUS)."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* The target user group is F\u0026B owners who operate one or more eatery in NUS. This application aims to improve"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "the"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "effectiveness and efficiency of managing their eatery\u0027 menus."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Map"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cUserGuide#, User Guide\u003e\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cAboutUs#, About Us\u003e\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cContactUs#, Contact Us\u003e\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* This application was built based on https://github.com/se-edu/addressbook-level4[Address Book (Level 4)], an"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "initiative of the https://se-edu.github.io/Team.html[se-edu] team."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* Some parts of this sample application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "_Marco Jakob_."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* Libraries used: https://github.com/TestFX/TestFX[TextFX], https://bitbucket.org/controlsfx/controlsfx/[ControlsFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/google/guava[Guava], https://github.com/junit-team/junit5[JUnit5]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Licence : link:LICENSE[MIT]"
      }
    ],
    "authorContributionMap": {
      "-": 30,
      "AZhiKai": 12
    }
  },
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/4.8.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00272.0.3\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "if (JavaVersion.current() \u003d\u003d JavaVersion.VERSION_1_10"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 System.getProperty(\u0027os.name\u0027).startsWith(\u0027Windows\u0027)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    logger.warn(\u0027\u0027\u0027\\"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        *********************************** WARNING **********************************"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        You seem to be running Gradle with JDK 10 on Windows."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        JDK 10 on Windows will fail to run tests in headless mode due to a JavaFX bug."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        You are highly recommended to use JDK 9!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027\u0027\u0027.stripIndent())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.MainApp\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_1_9"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_1_9"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    String testFxVersion \u003d \u00274.0.12-alpha\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.1.0\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.controlsfx\u0027, name: \u0027controlsfx\u0027, version: \u00278.40.11\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.google.guava\u0027, name: \u0027guava\u0027, version: \u002719.0\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027javax.xml.bind\u0027, name: \u0027jaxb-api\u0027, version: \u00272.2.8\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.sun.xml.bind\u0027, name: \u0027jaxb-impl\u0027, version: \u00272.3.0\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.sun.xml.bind\u0027, name: \u0027jaxb-core\u0027, version: \u00272.3.0\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027javax.activation\u0027, name: \u0027activation\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027junit\u0027, name: \u0027junit\u0027, version: \u00274.12\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-core\u0027, version: testFxVersion, {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        exclude group: \u0027org.testfx\u0027, module: \u0027testfx-internal-java8\u0027"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-junit\u0027, version: testFxVersion"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.testfx\u0027, name: \u0027testfx-internal-java9\u0027, version: testFxVersion"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.testfx\u0027, name: \u0027openjfx-monocle\u0027, version: \u0027jdk-9+181\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.vintage\u0027, name: \u0027junit-vintage-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveName \u003d \u0027addressbook.jar\u0027"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "task wrapper(type: Wrapper) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    gradleVersion \u003d \u00274.8.1\u0027"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories \u003d files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories \u003d files(sourceSets.main.output)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData \u003d files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories \u003d files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "task(guiTests)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "task(nonGuiTests)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "// Run `test` task if `guiTests` or `nonGuiTests` is specified"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "guiTests.dependsOn test"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "nonGuiTests.dependsOn test"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "task(allTests)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "// `allTests` implies both `guiTests` and `nonGuiTests`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "allTests.dependsOn guiTests"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "allTests.dependsOn nonGuiTests"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    systemProperty \u0027testfx.setup.timeout\u0027, \u002760000\u0027"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    doFirst {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean runGuiTests \u003d gradle.taskGraph.hasTask(guiTests)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean runNonGuiTests \u003d gradle.taskGraph.hasTask(nonGuiTests)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!runGuiTests \u0026\u0026 !runNonGuiTests) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            runGuiTests \u003d true"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            runNonGuiTests \u003d true"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        if (runNonGuiTests) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            test.include \u0027seedu/address/**\u0027"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        if (runGuiTests) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            test.include \u0027systemtests/**\u0027"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            test.include \u0027seedu/address/ui/**\u0027"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!runGuiTests) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            test.exclude \u0027seedu/address/ui/**\u0027"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "task headless {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    doLast {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        println \u0027Setting headless mode properties.\u0027"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        test {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            systemProperties \u003d ["
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0027testfx.robot\u0027   : \u0027glass\u0027,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0027testfx.headless\u0027: \u0027true\u0027,"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0027prism.order\u0027    : \u0027sw\u0027,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0027prism.text\u0027     : \u0027t2k\u0027,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            ]"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "// Makes sure that headless properties are set before running tests"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "test.mustRunAfter headless"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            linkcss             : true,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            stylesheet          : \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            icons               : \u0027font\u0027,"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            experimental        : true,"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            sectlinks           : true,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            idprefix            : \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            idseparator         : \u0027-\u0027,"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027site-root\u0027         : \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "            \u0027site-name\u0027         : \u0027MeNUS\u0027,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027site-githuburl\u0027    : \u0027https://github.com/CS2103-AY1819S1-F10-4/main\u0027,"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "task deployOfflineDocs(type: Copy) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    into(\u0027src/main/resources/docs\u0027)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    from(\"${asciidoctor.outputDir}/html5\") {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        include \u0027stylesheets/*\u0027"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        include \u0027images/*\u0027"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        include \u0027HelpWindow.html\u0027"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "task copyDummySearchPage(type: Copy) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    from \u0027docs/DummySearchPage.html\u0027"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${buildDir}/docs/html5\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "deployOfflineDocs.dependsOn asciidoctor"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "processResources.dependsOn deployOfflineDocs"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027headless\u0027, \u0027allTests\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "-": 245,
      "AZhiKai": 1
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "MeNUS was developed by the https://CS2103-AY1819S1-F10-4.github.io/main/AboutUs.html[Project Team]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "shown below based on the previous work of the https://se-edu.github.io/Team.html[se-edu] team. +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "We are a team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Ang Zhi Kai"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "image::azhikai.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "{empty}[http://www.comp.nus.edu.sg/~azhikai[homepage]] [https://github.com/azhikai[github]] [\u003c\u003cazhikai#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Role: Team Lead +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Responsibilities: Model + Storage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Tan Ying Zi Rebecca"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "image::rebstan97.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "{empty}[http://github.com/rebstan97[github]] [\u003c\u003crebstan97#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Role: Testing + Quality Assurance +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Responsibilities: UI"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Ong Ming Xian"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "image::m4dkip.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "{empty}[http://github.com/m4dkip[github]] [\u003c\u003cm4dkip#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Role: Documentation +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Responsibilities: Logic"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Lee Yi Can"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "image::yican95.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "{empty}[http://github.com/yican95[github]] [\u003c\u003cyican95#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Role: Integration +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Responsibilities: Logic"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Neo Kai Jun"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "image::hyperionnkj.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "{empty}[http://github.com/hyperionnkj[github]] [\u003c\u003chyperionnkj#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Role: Schedule + Tracking +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Responsibilities: Storage"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      }
    ],
    "authorContributionMap": {
      "-": 30,
      "AZhiKai": 27
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/CS2103-AY1819S1-F10-4/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* *Email us* : You can also reach us at `azhikai [at] comp.nus.edu.sg`"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "AZhiKai": 2
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d MeNUS - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ":repoURL: https://github.com/CS2103-AY1819S1-F10-4/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "By: `Team CS2103-AY1819S1-F10-4`      Since: `Sep 2018`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "This Developer Guide is written by the MeNUS v1.4 team for the benefits of future developers and maintainers of the"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "application."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* This guide includes instructions for setting up the development environment."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* This guide provides sufficient UMLs (unified model diagrams) to illustrate the architectural structure and design"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "methodology."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* This guide offers advice for troubleshooting some common issues."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "MeNUS is an open-source project, should any developers be interested, see the link:{repoURL}/docs/AboutUs.adoc[`Contact"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Us`] page"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": " for more information."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Prerequisites"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ". *JDK `9`*"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "JDK `10` on Windows will fail to run tests in \u003c\u003cUsingGradle#Running-Tests, headless mode\u003e\u003e due to a https://github.com/javafxports/openjdk-jfx/issues/66[JavaFX bug]."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "Windows developers are highly recommended to use JDK `9`."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ". *IntelliJ* IDE"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "IntelliJ by default has Gradle and JavaFx plugins installed. +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "Do not disable them. If you have disabled them, go to `File` \u003e `Settings` \u003e `Plugins` to re-enable them."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Setting up the project in your computer"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ". Fork this repo, and clone the fork to your computer"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ". Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ". Set up the correct JDK version for Gradle"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ".. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ".. Click `New...` and find the directory of the JDK"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Import Project`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ". Locate the `build.gradle` file and select it. Click `OK`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Open as Project`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `OK` to accept the default settings"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ". Open a console and run the command `gradlew processResources` (Mac/Linux: `./gradlew processResources`). It should finish with the `BUILD SUCCESSFUL` message. +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "This will generate all resources required by the application and tests."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Verifying the setup"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ". Run the `seedu.address.MainApp` and try a few commands"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ". \u003c\u003cTesting,Run the tests\u003e\u003e to ensure they all pass."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configurations to do before writing code"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Configuring the coding style"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "This project follows https://github.com/oss-generic/process/blob/master/docs/CodingStandards.adoc[oss-generic coding standards]. IntelliJ\u0027s default style is mostly compliant with ours but it uses a different import order from ours. To rectify,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ". Go to `File` \u003e `Settings...` (Windows/Linux), or `IntelliJ IDEA` \u003e `Preferences...` (macOS)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ". Select `Editor` \u003e `Code Style` \u003e `Java`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ". Click on the `Imports` tab to set the order"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "* For `Class count to use import with \u0027\\*\u0027` and `Names count to use static import with \u0027*\u0027`: Set to `999` to prevent IntelliJ from contracting the import statements"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "* For `Import Layout`: The order is `import static all other imports`, `import java.\\*`, `import javax.*`, `import org.\\*`, `import com.*`, `import all other imports`. Add a `\u003cblank line\u003e` between each `import`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can follow the \u003c\u003cUsingCheckstyle#, UsingCheckstyle.adoc\u003e\u003e document to configure Intellij to check style-compliance as you write code."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Updating documentation to match your fork"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "After forking the repo, the documentation will still have the SE-EDU branding and refer to the `se-edu/addressbook-level4` repo."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "If you plan to develop this fork as a separate product (i.e. instead of contributing to `se-edu/addressbook-level4`), you should do the following:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ". Configure the \u003c\u003cDocs-SiteWideDocSettings, site-wide documentation settings\u003e\u003e in link:{repoURL}/build.gradle[`build.gradle`], such as the `site-name`, to suit your own project."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ". Replace the URL in the attribute `repoURL` in link:{repoURL}/docs/DeveloperGuide.adoc[`DeveloperGuide.adoc`] and link:{repoURL}/docs/UserGuide.adoc[`UserGuide.adoc`] with the URL of your fork."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Setting up CI"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "Set up Travis to perform Continuous Integration (CI) for your fork. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e to learn how to set it up."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "After setting up Travis, you can optionally set up coverage reporting for your team fork (see \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e)."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "Coverage reporting could be useful for a team repository that hosts the final version but it is not that useful for your personal fork."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can set up AppVeyor as a second CI (see \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e)."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Having both Travis and AppVeyor ensures your App works on both Unix-based platforms and Windows-based platforms (Travis is Unix-based and AppVeyor is Windows-based)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Getting started with coding"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "When you are ready to start coding,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "1. Get some sense of the overall design by reading \u003c\u003cDesign-Architecture\u003e\u003e."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "2. Take a look at \u003c\u003cGetStartedProgramming\u003e\u003e."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "image::Architecture.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "The `.pptx` files used to create diagrams in this document can be found in the link:{repoURL}/docs/diagrams/[diagrams] folder. To update a diagram, modify the diagram in the pptx file, select the objects of the diagram, and choose `Save as picture`."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "`Main` has only one class called link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp`]. It is responsible for,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components. Two of those classes play important roles at the architecture level."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "* `EventsCenter` : This class (written using https://github.com/google/guava/wiki/EventBusExplained[Google\u0027s Event Bus library]) is used by components to communicate with other components using events (i.e. a form of _Event Driven_ design)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "* Defines its _API_ in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "* Exposes its functionality using a `{Component Name}Manager` class."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ".Class Diagram of the Logic Component"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Events-Driven nature of the design"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "The _Sequence Diagram_ below shows how the components interact for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ".Component interactions for `delete 1` command (part 1)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "image::SDforDeletePerson.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "Note how the `Model` simply raises a `AddressBookChangedEvent` when the Address Book data are changed, instead of asking the `Storage` to save the updates to the hard disk."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "The diagram below shows how the `EventsCenter` reacts to that event, which eventually results in the updates being saved to the hard disk and the status bar of the UI being updated to reflect the \u0027Last Updated\u0027 time."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ".Component interactions for `delete 1` command (part 2)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "image::SDforDeletePersonEventHandling.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "Note how the event is propagated through the `EventsCenter` to the `Storage` and `UI` without `Model` having to be coupled to either of them. This is an example of how this Event Driven approach helps us reduce direct coupling between components."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Ui]]"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d UI component"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the UI Component"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "image::UiClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter`, `BrowserPanel` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "* Binds itself to some data in the `Model` so that the UI can auto-update when data in the `Model` change."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "* Responds to events raised from various parts of the App and updates the UI accordingly."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Logic]]"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logic component"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "[[fig-LogicClassDiagram]]"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Logic Component"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "*API* :"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "link:{repoURL}/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ".  `Logic` uses the `AddressBookParser` class to parse the user command."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ".  This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ".  The command execution can affect the `Model` (e.g. adding a person) and/or raise events."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ".Interactions Inside the Logic Component for the `delete 1` Command"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "image::DeletePersonSdForLogic.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Model]]"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Model component"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Model Component"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "image::ModelClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model.java`]"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "* stores a `UserPref` object that represents the user\u0027s preferences."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "* stores the Address Book data."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "* does not depend on any of the other three components."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "As a more OOP model, we can store a `Tag` list in `Address Book`, which `Person` can reference. This would allow `Address Book` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object. An example of how such a model may look like is given below. +"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": " +"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "image:ModelClassBetterOopDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Storage]]"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Storage component"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Storage Component"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "image::StorageClassDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/storage/Storage.java[`Storage.java`]"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "* can save the Address Book data in xml format and read it back."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Commons]]"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Common classes"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Undo/Redo feature"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Current Implementation"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "The undo/redo mechanism is facilitated by `VersionedAddressBook`."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#commit()` -- Saves the current address book state in its history."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#undo()` -- Restores the previous address book state from its history."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#redo()` -- Restores a previously undone address book state from its history."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoStartingStateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoNewCommand1StateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "Step 3. The user executes `add n/David ...` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoNewCommand2StateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoExecuteUndoStateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index 0, pointing to the initial address book state, then there are no previous address book states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoSequenceDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "The `redo` command does the opposite -- it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone address book states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoNewCommand3StateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. We designed it this way because it no longer makes sense to redo the `add n/David ...` command. This is the behavior that most modern desktop applications follow."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoNewCommand4StateListDiagram.png[width\u003d\"800\"]"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoActivityDiagram.png[width\u003d\"650\"]"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Saves the entire address book."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy to implement."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by itself."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: We must ensure that the implementation of each individual command are correct."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the undo/redo commands"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Use a list to store the history of address book states."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy for new Computer Science student undergraduates to understand, who are likely to be the new incoming developers of our project."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update both `HistoryManager` and `VersionedAddressBook`."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Use `HistoryManager` for undo/redo"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: We do not need to maintain a separate list, and just reuse what is already in the codebase."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two different things."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::dataencryption[]"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Data Encryption"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "_{Explain here how the data encryption feature will be implemented}_"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "// end::dataencryption[]"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "[[Implementation-Configuration]]"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuration"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "Certain properties of the application can be controlled (e.g App name, logging level) through the configuration file (default: `config.json`)."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "We use asciidoc for writing documentation."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "We chose asciidoc over Markdown because asciidoc, although a bit more complex than Markdown, provides more flexibility in formatting."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Editing Documentation"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to learn how to render `.adoc` files locally to preview the end result of your edits."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you can download the AsciiDoc plugin for IntelliJ, which allows you to preview the changes you have made to your `.adoc` files in real-time."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Publishing Documentation"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingTravis#deploying-github-pages, UsingTravis.adoc\u003e\u003e to learn how to deploy GitHub Pages using Travis."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Converting Documentation to PDF format"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://www.google.com/chrome/browser/desktop/[Google Chrome] for converting documentation to PDF format, as Chrome\u0027s PDF engine preserves hyperlinks used in webpages."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "Here are the steps to convert the project documentation files to PDF format."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ".  Follow the instructions in \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to convert the AsciiDoc files in the `docs/` directory to HTML format."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ".  Go to your generated HTML files in the `build/docs` folder, right click on them and select `Open with` -\u003e `Google Chrome`."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ".  Within Chrome, click on the `Print` option in Chrome\u0027s menu."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ".  Set the destination to `Save as PDF`, then click `Save` to save a copy of the file in PDF format. For best results, use the settings indicated in the screenshot below."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": ".Saving documentation as PDF files in Chrome"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "image::chrome_save_as_pdf.png[width\u003d\"300\"]"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "[[Docs-SiteWideDocSettings]]"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Site-wide Documentation Settings"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "The link:{repoURL}/build.gradle[`build.gradle`] file specifies some project-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how all documentation files within this project are rendered."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "Attributes left unset in the `build.gradle` file will use their *default value*, if any."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"1,2a,1\", options\u003d\"header\"]"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ".List of site-wide attributes"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-name`"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "|The name of the website."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "If set, the name will be displayed near the top of the page."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-githuburl`"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "|URL to the site\u0027s repository on https://github.com[GitHub]."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "Setting this will add a \"View on GitHub\" link in the navigation bar."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-seedu`"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "|Define this attribute if the project is an official SE-EDU project."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "This will render the SE-EDU navigation bar at the top of the page, and add some SE-EDU-specific navigation items."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "[[Docs-PerFileDocSettings]]"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Per-file Documentation Settings"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "Each `.adoc` file may also specify some file-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how the file is rendered."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "Asciidoctor\u0027s https://asciidoctor.org/docs/user-manual/#builtin-attributes[built-in attributes] may be specified and used as well."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "Attributes left unset in `.adoc` files will use their *default value*, if any."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"1,2a,1\", options\u003d\"header\"]"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ".List of per-file attributes, excluding Asciidoctor\u0027s built-in attributes"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-section`"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "|Site section that the document belongs to."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "This will cause the associated item in the navigation bar to be highlighted."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "One of: `UserGuide`, `DeveloperGuide`, ``LearningOutcomes``{asterisk}, `AboutUs`, `ContactUs`"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "_{asterisk} Official SE-EDU projects only_"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "|`no-site-header`"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "|Set this attribute to remove the site navigation bar."
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Site Template"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "The files in link:{repoURL}/docs/stylesheets[`docs/stylesheets`] are the https://developer.mozilla.org/en-US/docs/Web/CSS[CSS stylesheets] of the site."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "You can modify them to change some properties of the site\u0027s design."
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "The files in link:{repoURL}/docs/templates[`docs/templates`] controls the rendering of `.adoc` files into HTML5."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "These template files are written in a mixture of https://www.ruby-lang.org[Ruby] and http://slim-lang.com[Slim]."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "Modifying the template files in link:{repoURL}/docs/templates[`docs/templates`] requires some knowledge and experience with Ruby and Asciidoctor\u0027s API."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "You should only modify them if you need greater control over the site\u0027s layout than what stylesheets can provide."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "The SE-EDU team does not provide support for modified template files."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "[[Testing]]"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Running Tests"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "There are three ways to run tests."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "The most reliable way to run tests is the 3rd one. The first two methods might fail some GUI tests due to platform/resolution-specific idiosyncrasies."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "*Method 1: Using IntelliJ JUnit test runner*"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "* To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "* To run a subset of tests, you can right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "*Method 2: Using Gradle*"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "* Open a console and run the command `gradlew clean allTests` (Mac/Linux: `./gradlew clean allTests`)"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e for more info on how to run tests using Gradle."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "*Method 3: Using Gradle (headless)*"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "Thanks to the https://github.com/TestFX/TestFX[TestFX] library we use, our GUI tests can be run in the _headless_ mode. In the headless mode, GUI tests do not show up on the screen. That means the developer can do other things on the Computer while the tests are running."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "To run tests in headless mode, open a console and run the command `gradlew clean headless allTests` (Mac/Linux: `./gradlew clean headless allTests`)"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Types of tests"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "We have two types of tests:"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": ".  *GUI Tests* - These are tests involving the GUI. They include,"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ".. _System Tests_ that test the entire App by simulating user actions on the GUI. These are in the `systemtests` package."
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": ".. _Unit tests_ that test the individual components. These are in `seedu.address.ui` package."
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": ".  *Non-GUI Tests* - These are tests not involving the GUI. They include,"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "..  _Unit tests_ targeting the lowest level methods/classes. +"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `seedu.address.commons.StringUtilTest`"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "..  _Integration tests_ that are checking the integration of multiple code units (those code units are assumed to be working). +"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `seedu.address.storage.StorageManagerTest`"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "..  Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together. +"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `seedu.address.logic.LogicManagerTest`"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Troubleshooting Testing"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "**Problem: `HelpWindowTest` fails with a `NullPointerException`.**"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "* Reason: One of its dependencies, `HelpWindow.html` in `src/main/resources/docs` is missing."
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution: Execute Gradle task `processResources`."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Build Automation"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e to learn how to use Gradle for build automation."
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Continuous Integration"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://travis-ci.org/[Travis CI] and https://www.appveyor.com/[AppVeyor] to perform _Continuous Integration_ on our projects. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e and \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Coverage Reporting"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://coveralls.io/[Coveralls] to track the code coverage of our projects. See \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Documentation Previews"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "When a pull request has changes to asciidoc files, you can use https://www.netlify.com/[Netlify] to see a preview of how the HTML version of those asciidoc files will look like when the pull request is merged. See \u003c\u003cUsingNetlify#, UsingNetlify.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Making a Release"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "Here are the steps to create a new release."
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ".  Update the version number in link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp.java`]."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": ".  Generate a JAR file \u003c\u003cUsingGradle#creating-the-jar-file, using Gradle\u003e\u003e."
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": ".  Tag the repo with the version number. e.g. `v0.1`"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": ".  https://help.github.com/articles/creating-releases/[Create a new release using GitHub] and upload the JAR file you created."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Managing Dependencies"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "A project often depends on third-party libraries. For example, Address Book depends on the http://wiki.fasterxml.com/JacksonHome[Jackson library] for XML parsing. Managing these _dependencies_ can be automated using Gradle. For example, Gradle can download the dependencies automatically, which is better than these alternatives. +"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "a. Include those libraries in the repo (this bloats the repo size). +"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "b. Require developers to download those libraries manually (this creates extra work for developers)."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d Product Scope"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Target user profile*:"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* is a owner of one or more restaurant in National University of Singapore."
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* prefers having PC application to handle his/her restaurant."
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* can type reasonably fast."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* prefers typing over mouse input."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* is reasonably comfortable using CLI apps."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Value proposition*: efficiently and effectively manage restaurant without the need to invest in a complicated and"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "expensive system."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "|`* * *` |restaurant owner |have my system protected |ensure only authorised staffs can access the system"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "|`* * *` |restaurant owner |modify staff account |update my staff\u0027s data"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "|`* * *` |restaurant owner |delete staff account |remove system access for an ex-staff"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "|`* * *` |restaurant owner |assign role to a staff account |ensure only authorised staff can access certain parts of"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "the system"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "|`* * *` |new restaurant owner|see usage instructions |refer to instructions when I forget how to use the application"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "|`* * *` |forgetful restaurant owner |see usage instructions |refer to instructions when I forget how to use the"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "application"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "|`* * *` |restaurant owner |check the current availability of ingredients|manage my ingredients easily"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "|`* * *` |restaurant owner |see which ingredients are low in stock count |know which ingredients to restock promptly"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "|`* *` |restaurant owner |check which dishes are not able to be cooked due to lack of ingredients |remove them from the daily menu"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "|`* *` |lazy restaurant owner |save regular restocks and consumption data as the default |do not need to key in the same entries every time"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "|`*` |forgetful restaurant owner |set reminders for the next restock |remember to restock"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "|`* * *` |restaurant owner |keep track of daily sales |meet revenue goals, improve the menu and track inventory"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "|`* * *` |restaurant owner |modify past sales records  |update any mistakes / refunds / cancelled booking"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "|`* * *` |analytical restaurant owner |check the sales history of a menu item  |check the total revenue it has"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "accumulated, and analyse its long-term sales performance"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "|`* *` |profit-driven restaurant owner |know the most profitable dishes  | employ marketing strategies to bring in"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "more revenue"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "|`* *` |profit-driven restaurant owner |know the most profitable days| employ marketing strategies to bring in more"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "revenue"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "yican95"
        },
        "content": "|`* * *` |restaurant owner |add a new item to the menu |introduce new dishes"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "yican95"
        },
        "content": "|`* * *` |restaurant owner |delete an item from the menu |remove entries that I no longer need"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "yican95"
        },
        "content": "|`* * *` |restaurant owner |edit an item from the menu |update the entries of the menu"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "yican95"
        },
        "content": "|`* * *` |restaurant owner |find an item by name |locate details of items without having to go through the entire"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "yican95"
        },
        "content": " list"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "yican95"
        },
        "content": "|`* * *` |restaurant owner |filter items by tag |filter and find items without having to go through the entire list"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "yican95"
        },
        "content": "|`* * *` |restaurant owner |give an item discount |have discount for items in menu"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "yican95"
        },
        "content": "|`* * *` |restaurant owner |view menu |see the changes made to the menu"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "yican95"
        },
        "content": "|`* * *` |restaurant owner |clear menu |revamp my menu when there is a need"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "yican95"
        },
        "content": "|`* * *` |restaurant owner |export menu |print hard copies of the menu"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "|`* * *` |restaurant owner |add a reservation |keep track of who booked a table in my restaurant"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "|`* * *` |restaurant owner |edit a reservation |make changes when a customer requests to do so"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "|`* * *` |restaurant owner |sort reservations |easily see the reservations in chronological order"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "|`* * *` |restaurant owner |delete a reservation |get rid of reservations that I don\u0027t need anymore"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "(For all use cases below, the *System* is the `App` and the *Actor* is the `user`, unless"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "specified"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "otherwise)"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Use case: UC101 - Create account"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "The use case for creating account role is the same."
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Pre-conditions*:"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* User has to be logged in."
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* User must be an administrator."
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Guarantees*:"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* A new account will be created."
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "1. User requests to create a new user account."
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "2. App create the new user account."
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "3. App returns a success message confirming that the user account has been created."
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* 2a. Username already exists."
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "** 2a1. App returns an error message."
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "** 2a2. User enters new data."
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "+"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Steps 2a1-2a2 are repeated until the data entered are correct."
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "+"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* 2b. Username or Password length not fulfilled."
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "** 2b1. App returns an error message."
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "** 2b2. User enters new data."
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "+"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Steps 2b1-2b2 are repeated until the data entered are correct."
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "+"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Use case: UC102 - Login"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Pre-conditions*:"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* User must not be logged in."
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Guarantees*:"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* User will be logged into the App."
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "1. User requests to login."
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "2. App authenticates the user."
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "3. App returns a success message confirming that the user account has been created."
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "+"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* 2a. Credential is invalid."
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "** 2a1. App requests for the correct data."
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "** 2a2. User enters new data."
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "+"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Steps 2a1-2a2 are repeated until the data entered are correct."
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "+"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Use case: UC103 - Edit account"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Pre-conditions*:"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* User has to be logged in."
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* User must be an administrator."
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Guarantees*:"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* Account data will remain intact if nothing changes OR"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* Account data will be updated OR"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* Account will be deleted."
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "1. User requests to edit an account."
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "2. App edit the user account."
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "3. App returns a success message confirming that the user account has been edited."
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "+"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* 2a. Username does not exists."
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "** 2a1. App requests for the correct data."
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "** 2a2. User enters new data."
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "+"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Steps 2a1-2a2 are repeated until the data entered are correct."
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "+"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* 3a. No data changed."
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "+"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Use case: UC104 - Authentication logging"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Pre-conditions*:"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* User must not be logged in."
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Guarantees*:"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* A new record will be added into the log of the authentication attempt."
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "1. User requests to [.underline]#login (UC102)#."
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "2. App logs attempt."
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Use case: UC201 - Add ingredient"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User requests to add a new ingredient."
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "2.  App adds the ingredient specified to the ingredient list."
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "3.  App returns a success message confirming the new ingredient has been added."
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The ingredient name entered is already in the ingredient list."
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "** 2a1. App returns a message telling user the ingredient name already exists."
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "** 2a2. User requests to add ingredient again."
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "Steps 2a1-2a2 are repeated until an ingredient name which does not exist is used."
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Use case: UC202 - Delete ingredient"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User requests to list ingredients."
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "2.  App shows a list of ingredients."
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "3.  User requests to delete a specific ingredient in the list."
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "4.  App deletes the ingredient."
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The list is empty."
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "* 3a. The given index is invalid."
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "** 3a1. App returns a message telling user the index is invalid."
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "** 3a2. User requests to delete ingredient again."
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "Steps 3a1-3a2 are repeated until a valid index is entered."
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Use case: UC203 - Edit ingredient"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User requests to edit a specific ingredient."
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "2.  App edits the specified ingredient with the updated values."
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "3.  App returns a success message confirming the specified ingredient has been edited."
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. The given index is invalid."
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "** 1a1. App returns a message telling user that the index is invalid."
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "** 1a2. User requests to edit ingredient again."
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "Steps 1a1-1a2 are repeated until a valid index is entered."
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "* 1b. None of the optional fields are specified."
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "** 1b1. App returns a message telling user at least one optional field has to be specified."
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "** 1b2. User requests to edit ingredient again."
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "Steps 1b1-1b2 are repeated until at least one optional field is entered."
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Use case: UC204 - Stock up ingredient"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User requests to stock up a specific ingredient."
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "2.  App updates the count of the specified ingredient."
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "3.  App returns a success message confirming the specified ingredient has been stocked up."
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. The ingredient name does not exist."
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "** 1a1. App returns a message telling user that the ingredient does not exist."
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "** 1a2. User requests to stock up ingredient again."
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "Steps 1a1-1a2 are repeated until a valid ingredient name is entered."
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Use case: UC205 - Consume ingredient"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User requests to consume a specific ingredient."
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "2.  App updates the count of the specified ingredient."
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "3.  App returns a success message confirming the specified ingredient has been consumed."
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. The ingredient name does not exist."
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "** 1a1. App returns a message telling user that the ingredient does not exist."
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "** 1a2. User requests to consume ingredient again."
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "Steps 1a1-1a2 are repeated until a valid ingredient name is entered."
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "* 1b. The intended consumption is more than the number of units available."
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "** 1b1. App informs user that there is not enough of the ingredient."
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "** 1b2. User requests to consume ingredient again."
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "Steps 1b1-1b2 are repeated until the number of units entered is less than the number of units available."
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Use case: UC301 -  Add item to menu"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "yican95"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "yican95"
        },
        "content": "1.  User requests to add item to menu."
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "yican95"
        },
        "content": "2.  App adds the item to menu."
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "yican95"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "yican95"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "yican95"
        },
        "content": "* 1a. Invalid argument given for the command."
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "yican95"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "yican95"
        },
        "content": "** 1a1. App shows an error message that ITEM_NAME or/and ITEM_PRICE are invalid."
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case restart from step 1."
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "yican95"
        },
        "content": "* 1b. The item name entered is already in the menu."
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "yican95"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "yican95"
        },
        "content": "** 1b1. App shows an error message that the item name already exists."
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case restart from step 1."
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "yican95"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Use case: UC302 - Delete item from menu"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "yican95"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "yican95"
        },
        "content": "1.  User requests to list items."
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "yican95"
        },
        "content": "2.  App shows a list of items in menu."
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "yican95"
        },
        "content": "3.  User requests to delete a specific item in the list."
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "yican95"
        },
        "content": "4.  App deletes the item."
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "yican95"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "yican95"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "yican95"
        },
        "content": "* 2a. The list is empty."
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "yican95"
        },
        "content": "* 3a. The given index is invalid."
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "yican95"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "yican95"
        },
        "content": "** 3a1. App shows an error message that the given index is invalid."
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "yican95"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Use case: UC303 - Edit item from menu"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "yican95"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "yican95"
        },
        "content": "1.  User requests to list items."
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "yican95"
        },
        "content": "2.  App shows a list of items in menu."
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "yican95"
        },
        "content": "3.  User requests to edit a specific item in the list."
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "yican95"
        },
        "content": "4.  App edits the item with updated values."
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "yican95"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "yican95"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "yican95"
        },
        "content": "* 2a. The list is empty."
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "yican95"
        },
        "content": "* 3a. The given index is invalid."
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "yican95"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "yican95"
        },
        "content": "** 3a1. App shows an error message that the given index is invalid."
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "yican95"
        },
        "content": "* 3b. None of the optional fields are specified."
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "yican95"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "yican95"
        },
        "content": "** 3b1. App shows an error message that none of the optional fields are specified."
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "yican95"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Use case: UC304 - Give an item a discount"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "yican95"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "yican95"
        },
        "content": "1.  User requests to list items."
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "yican95"
        },
        "content": "2.  App shows a list of items in menu."
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "yican95"
        },
        "content": "3.  User requests to give a specific item in the list a discount."
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "yican95"
        },
        "content": "4.  App give the item a discount."
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "yican95"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "yican95"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "yican95"
        },
        "content": "* 2a. The list is empty."
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "yican95"
        },
        "content": "* 3a. The given index is invalid."
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "yican95"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "yican95"
        },
        "content": "** 3a1. App shows an error message that the given index is invalid."
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "yican95"
        },
        "content": "* 3b. The given percentage is invalid."
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "yican95"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "yican95"
        },
        "content": "** 3b1. App shows an error message that the given percentage is invalid."
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "yican95"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Use case: UC305 - Export menu"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "yican95"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "yican95"
        },
        "content": "1.  User requests to export menu."
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "yican95"
        },
        "content": "2.  App export the menu."
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "yican95"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "yican95"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "yican95"
        },
        "content": "* 1a. Invalid file path given for the command."
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "yican95"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "yican95"
        },
        "content": "** 1a1. App shows an error message that file path is invalid."
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "yican95"
        },
        "content": "+"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "yican95"
        },
        "content": "Use case restart from step 1."
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "\u003d\u003d\u003d Use case: UC401 - Add reservation"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "1.  User requests to add a new reservation."
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "2.  App adds the reservation to the reservations list."
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "3.  App returns a success message confirming the new reservation has been added."
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* 2a. The reservation date or time entered has an incorrect format."
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "** 2a1. App returns a message telling user the date or time format is entered incorrectly."
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "** 2a2. User requests to add reservation again."
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Steps 2a1-2a2 are repeated until a proper date and time are entered."
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "\u003d\u003d\u003d Use case: UC402 - Edit reservation"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "1.  User requests to edit a specified reservation."
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "2.  App edits the specified reservation with the updated values."
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "3.  App returns a success message confirming the specified reservation has been edited."
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* 1a. The given index is invalid."
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "** 1a1. App returns a message telling user that the index is invalid."
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "** 1a2. User requests to edit reservation again."
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Steps 1a1-1a2 are repeated until a valid index is entered."
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* 1b. None of the optional fields are specified."
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "** 1b1. App returns a message telling user at least one optional field has to be specified."
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "** 1b2. User requests to edit reservation again."
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Steps 1b1-1b2 are repeated until at least one optional field is entered."
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "\u003d\u003d\u003d Use case: UC403 - Delete reservation"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "1.  User requests to list reservations."
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "2.  App shows a list of reservations."
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "3.  User requests to delete a specific reservation in the list."
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "4.  App deletes the reservation."
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* 2a. The list is empty."
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* 3a. The given index is invalid."
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "** 3a1. App returns a message telling user the index is invalid."
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "** 3a2. User requests to delete reservation again."
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Steps 3a1-3a2 are repeated until a valid index is entered."
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "+"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "\u003d\u003d\u003d Use case: UC501 - Record sales volume of menu item within a day"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "*Guarantees*:"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* A new sales record of a menu item will be appended."
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "1. User requests to record sales volume of a menu item within a specified day."
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "2. App appends the record at the end of the day\u0027s sales report."
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "3. App returns a success message confirming that the record is successful."
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. Invalid command format entered by the user."
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "** 1a1. App returns a message telling user that the command format is invalid."
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 1a2. User requests to record sales volume again."
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Steps 1a1-1a2 are repeated until a valid command format is entered."
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. Sales report does not exist for the specified day."
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 2a1. App automatically creates a sales report for the day."
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* 2b. Sales record of the menu item already exist in the day\u0027s sales report."
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 2b1. App returns a message telling user that the menu item\u0027s record already exists."
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 2b2. User requests to record sales volume again."
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Steps 2b1-2b2 are repeated until a record with unique item name is entered."
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "\u003d\u003d\u003d Use case: UC502 - Editing sales record in a sales report for a day"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "*Guarantees*:"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "* Sales record will be updated to the user\u0027s input."
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "1. User requests to edit a sales record in the sales report for a specified day."
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "2. App updates the sales record to that given by the user."
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "3. App returns a success message confirming that the modification is successful."
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "* 1a. Invalid command format entered by the user."
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "** 1a1. App returns a message telling user that the command format is invalid."
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 1a2. User requests to edit sales record again."
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Steps 1a1-1a2 are repeated until a valid command format is entered."
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* 1b. The given index/name is invalid."
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 1b1. App returns a message telling user that the index/name is invalid."
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 1b2. User requests to edit sales record again."
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Steps 1b1-1b2 are repeated until a valid index/name is entered."
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* 1c. None of the optional fields are specified."
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 1c1. App returns a message telling user at least one optional field has to be specified."
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 1c2. User requests to edit sales record again."
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Steps 1c1-1c2 are repeated until at least one optional field is entered."
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "\u003d\u003d\u003d Use case: UC503 - Deleting sales record in a sales report for a day"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "1.  User requests to display the sales report of a specified day."
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "2.  App shows the sales report."
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "3.  User requests to delete a sales record in that sales report."
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "4.  App deletes the sales record."
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "5. App returns a success message confirming that the deletion is successful."
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* 1a. The sales report does not exist in the specified day since no record has been entered."
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* 1b. App tells user that sales report does not exist."
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "* 3a. Invalid command format entered by the user."
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "** 3a1. App returns a message telling user that the command format is invalid."
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 3a2. User requests to delete sales record again."
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Steps 3a1-3a2 are repeated until a valid command format is entered."
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case resumes at step 4."
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* 3b. The given index/name is invalid."
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 3b1. App returns a message telling user the index/name is invalid."
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 3b2. User requests to delete sales record again."
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Steps 3b1-3b2 are repeated until a valid index/name is entered."
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case resumes at step 4."
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "\u003d\u003d\u003d Use case: UC504 - Checking sales history of a menu item"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "1. User requests to check sales history of a menu item."
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "2. App shows the sales history of the menu item."
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* 1a. The given menu item does not have any past sales record."
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 1a1. App returns a message telling user that the item does not have any past sales record."
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "\u003d\u003d\u003d Use case: UC505 - Ranking menu items according to profitability"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "The use case for ranking dates according to profitability is the same."
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "1. User requests to rank menu items according to the total revenue accumulated in past sales"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "records."
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "2. App shows the profitability ranking of the menu items."
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* 1a. User has never entered a sales record. No sales record exists."
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "** 1a1. App returns a message telling user that there is no sales record."
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "+"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non Functional Requirements"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ".  Should work on any \u003c\u003cmainstream-os,Mainstream OS\u003e\u003e as long as it has Java `9` or higher installed."
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ".  Respond fast to user input and show the respective output within milliseconds."
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": ".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ".  Menu size should not be limited."
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ".  System must be secured such that only authorised staffs can access it and execute commands."
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ".  System should not require constant maintenance and work off-to-shelf without any installation."
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ".  JAR file should not exceed 100 MB."
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ".  Test coverage should be at least 80%."
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ".  Should always favour security over efficiency in development."
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ".  Any user who has the basic proficiency of the English language should be able to use the application with the help"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": " of the link:{repoURL}/docs/UserGuide.adoc[`UserGuide.adoc`]."
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": ".  System should not require any internet access except for updating."
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "[[mainstream-os]] Mainstream OS::"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": ".. Double-click the jar file +"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": ". Saving window preferences"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": ".. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": ".. Re-launch the app by double-clicking the jar file. +"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yican95": 127,
      "HyperionNKJ": 135,
      "m4dkip": 79,
      "-": 867,
      "AZhiKai": 158
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d MeNUS - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ":repoURL: https://github.com/CS2103-AY1819S1-F10-4/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "By: `Team CS2103-AY1819S1-F10-4`      Since: `Sep 2018`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "As the name implies, link:{repoURL}[MeNUS] helps you improve the Management(M) and its efficiency(e) of your"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "restaurants in NUS."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "MeNUS is for restaurant owners who prefer to use a desktop application to manage their restaurants. More importantly,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "MeNUS is *optimized for users who prefer to work with a Command Line Interface (CLI) while still having the benefits"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "of a Graphical User Interface (GUI)*. If you can type fast, MeNUS allows you to manage all aspects of your eatery"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "from a single location -- menu, inventory, sales and bookings management!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Quick Start"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ".  Ensure you have Java version `9` or later installed in your Computer."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ".  Download the latest `menus.jar` link:{repoURL}/releases[here]."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ".  Copy the file to the folder you want to use as the home folder."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ".  Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "image::Ui.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ".  Type the command in the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. typing *`help`* and pressing kbd:[Enter] will open the help window."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ".  Some example commands you can try:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* *`list`* : lists all contacts"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : adds a contact named `John Doe` to the Address Book."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* **`delete`**`3` : deletes the 3rd contact shown in the current list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "* *`exit`* : exits the app"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ".  Refer to \u003c\u003cCommands\u003e\u003e for details of each command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[[Components]]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d Components"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*MeNUS* consists of four main components: menus, inventory, sales and bookings management."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Menus"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "_To be completed by Yi Can_"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Inventory"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "_To be completed by Rebecca_"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Sales"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "_To be completed by Kai Jun_"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Bookings"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "_To be completed by Ming Xian_"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "[[Features]]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d Key Features"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Convenience"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "It is an ultimate All-In-One application that will provide you with the utmost convenience to manage your"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "restaurants in NUS."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* Export data to `.xml` (default) or Excel file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Security"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Security is key to a business\u0027s success. *MeNUS* ensures the security of your restaurant\u0027s data by:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* Encrypting all restaurant data using AES-265."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* Securing account passwords using bcrypt."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* User needs to be authenticated before they can run any commands."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* Authentication attempts (both succeed and failed) are logged."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Efficiency"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Time is money. *MeNUS* ensures that the application will:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* Load within 5 seconds."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* Execute command within split of a second."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "** Update the GUI almost instantaneously."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "[[Commands]]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d Commands"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "*Command Format*"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be supplied by the user e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "* Items in square brackets are optional e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "* Items with `…`​ after them can be used multiple times including zero times e.g. `[t/TAG]...` can be used as `{nbsp}` (i.e. 0 times), `t/friend`, `t/friend t/family` etc."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "* Parameters can be in any order e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Viewing help : `help`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Adding a person: `add`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a person to the address book +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]...`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "A person can have any number of tags (including 0)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Listing all persons : `list`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "Shows a list of all persons in the address book. +"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Editing a person : `edit`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "Edits an existing person in the address book. +"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]...`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "* At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "* Existing values will be updated to the input values."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "* You can remove all the person\u0027s tags by typing `t/` without specifying any tags after it."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "* `edit 1 p/91234567 e/johndoe@example.com` +"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "* `edit 2 n/Betsy Crower t/` +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Locating persons by name: `find`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "Finds persons whose names contain any of the given keywords. +"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `find KEYWORD [MORE_KEYWORDS]`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "* The search is case insensitive. e.g `hans` will match `Hans`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "* Only the name is searched."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "* Only full words will be matched e.g. `Han` will not match `Hans`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "* Persons matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "* `find John` +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "Returns `john` and `John Doe`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "* `find Betsy Tim John` +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "Returns any person having names `Betsy`, `Tim`, or `John`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Deleting a person : `delete`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "Deletes the specified person from the address book. +"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "* Deletes the person at the specified `INDEX`."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "* The index refers to the index number shown in the displayed person list."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "* The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "* `list` +"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "`delete 2` +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "Deletes the 2nd person in the address book."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "* `find Betsy` +"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "`delete 1` +"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "Deletes the 1st person in the results of the `find` command."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Selecting a person : `select`"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "Selects the person identified by the index number used in the displayed person list. +"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `select INDEX`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "* Selects the person and loads the Google search page the person at the specified `INDEX`."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "* The index refers to the index number shown in the displayed person list."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "* The index *must be a positive integer* `1, 2, 3, ...`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "* `list` +"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "`select 2` +"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "Selects the 2nd person in the address book."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "* `find Betsy` +"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "`select 1` +"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "Selects the 1st person in the results of the `find` command."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Listing entered commands : `history`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "Lists all the commands that you have entered in reverse chronological order. +"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `history`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "Pressing the kbd:[\u0026uarr;] and kbd:[\u0026darr;] arrows will display the previous and next input respectively in the command box."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Undoing previous command : `undo`"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "Restores the address book to the state before the previous _undoable_ command was executed. +"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `undo`"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "Undoable commands: those commands that modify the address book\u0027s content (`add`, `delete`, `edit` and `clear`)."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "* `delete 1` +"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "`list` +"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` (reverses the `delete 1` command) +"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "* `select 1` +"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "`list` +"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` +"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "The `undo` command fails as there are no undoable commands executed previously."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "* `delete 1` +"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "`clear` +"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` (reverses the `clear` command) +"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` (reverses the `delete 1` command) +"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Redoing the previously undone command : `redo`"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "Reverses the most recent `undo` command. +"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `redo`"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "* `delete 1` +"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` (reverses the `delete 1` command) +"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "`redo` (reapplies the `delete 1` command) +"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "* `delete 1` +"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "`redo` +"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "The `redo` command fails as there are no `undo` commands executed previously."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "* `delete 1` +"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "`clear` +"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` (reverses the `clear` command) +"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "`undo` (reverses the `delete 1` command) +"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "`redo` (reapplies the `delete 1` command) +"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "`redo` (reapplies the `clear` command) +"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Clearing all entries : `clear`"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "Clears all entries from the address book. +"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Exiting the program : `exit`"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "Exits the program. +"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Saving the data"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "Address book data are saved in the hard disk automatically after any command that changes the data. +"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Logging in: `login`"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Logs into an existing account. +"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Format: `login id/USERNAME pw/PASSWORD` +"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `login id/azhikai pw/p@55w0rd`"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Logging out: `logout`"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Logs out of the account. +"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Format: `logout`"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Creating user account: `create-account`"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Creates a new user account with a given role. +"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Format: `create-account id/USERNAME pw/PASSWORD r/ROLE_ID`"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `create-account id/azhikai pw/p@55w0rd r/0`"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Editing user account: `edit-account`"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Edits an existing user account. +"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Format: `edit-account id/USERNAME [nid/NEW_USERNAME] [pw/NEW_PASSWORD] [r/NEW_ROLE_ID]`"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "****"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* The account\u0027s data will remain intact if none of the optional fields are provided."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "****"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `edit-account id/azhikai`"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "** Nothing happens in this case."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `edit-account id/azhikai nid/angzhikai`"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `edit-account id/azhikai nid/angzhikai pw/n3wp@55w0rd`"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `edit-account id/azhikai r/1`"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Deleting user account: `delete-account`"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Deletes an existing user account. +"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Format: `delete-account id/USERNAME `"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `delete-account id/azhikai`"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d List all user accounts: `list-account`"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "List all existing user accounts. +"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Format: `list-account`"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Creating user role: `create-role`"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Creates a new user role. +"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Format: `create-role id/ROLE_ID n/ROLE_NAME`"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `create-role id/0 n/Administrator`"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `create-role id/1 n/Manager`"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Editing user role: `edit-role`"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Edits an existing role. +"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Format: `edit-role id/ROLE_ID [nid/NEW_ROLE_ID] [n/ROLE_NAME]`"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "****"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* The role\u0027s data will remain intact if none of the optional fields are provided."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "****"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `edit-role id/0`"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "** Nothing happens in this case."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `edit-role id/0 nid/2 n/Supervisor`"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `edit-account id/0 nid/1`"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `edit-account id/0 n/Owner`"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d Deleting user role: `delete-role`"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Deletes an existing user role. +"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Format: `delete-role id/ROLE_ID `"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* `delete-role id/0`"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "\u003d\u003d\u003d List all user roles: `list-role`"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "List all existing user roles. +"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "Format: `list-role`"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Adding an ingredient: `add-ingredient`"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a new ingredient to the ingredient list. +"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `add-ingredient n/INGREDIENT_NAME t/UNIT_TYPE p/PRICE_PER_UNIT m/MINIMUM`"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "* MINIMUM refers to the minimum number of units below which an ingredient will be considered low in stock count"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "* `add-ingredient n/cod fish t/kilogram p/20 m/1`"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Listing all ingredients : `list-ingredients`"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "Shows a list of all ingredients in the ingredient list. +"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `list-ingredients`"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Listing ingredients with low stock count: `list-ingredients-low`"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "Shows a list of ingredients that are low in stock count. +"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `list-ingredients-low`"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Removing an ingredient: `delete-ingredient`"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "Deletes the specified ingredient from the ingredient list. +"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `delete-ingredient INDEX` or `delete-ingredient NAME`"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "* Deletes the ingredient at the specified `INDEX`."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "* The index refers to the index number shown in the displayed ingredient list."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "* The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "* Alternatively, deletes the ingredient with the specified `NAME`."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "* `list-ingredients` +"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "`delete-ingredient 1` +"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "`list-ingredients` +"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "Deletes the 1st ingredient in the ingredient list."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "* `delete-ingredient cod fish` +"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "`list-ingredients` +"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "Deletes the ingredient `cod fish` from the ingredient list."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Editing an ingredient: `edit-ingredient`"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "Edits an ingredient in the ingredient list. +"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `edit-ingredient INDEX [n/INGREDIENT_NAME] [t/UNIT_TYPE] [p/PRICE_PER_UNIT] [m/MINIMUM]` or `edit-ingredient NAME [n/INGREDIENT_NAME] [t/UNIT_TYPE] [p/PRICE_PER_UNIT] [m/MINIMUM]`"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "* Edits the ingredient at the specified `INDEX`. The index refers to the index number shown in the displayed ingredient list. The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "* At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "* Existing values will be updated to the input values."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "* Alternatively, edits the ingredient with the specified `NAME`."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "* `edit-ingredient 3 n/thin fries` +"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "Edits the name of the 3rd ingredient to be `thin fries`."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "* `edit-ingredient 4 u/1.5ml bottle p/1.20`  +"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "Edits the unit type and price per unit of the 4th ingredient to be `1.5ml bottle` and `1.20` respectively."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "* `edit-ingredient ketchup n/tomato ketchup`  +"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "Edits the name of `ketchup` to be `tomato ketchup`."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Stocking up an ingredient: `stockup`"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "Increase the number of units of an ingredient or multiple ingredients. +"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `stockup n/INGREDIENT_NAME... u/NUMBER_OF_UNITS...`"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "* NUMBER_OF_UNITS for an ingredient must follow the INGREDIENT_NAME for that particular ingredient."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "* `stockup n/cod fish u/5`"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "* `stockup n/chicken thigh u/10 n/fries u/20 n/tomato ketchup u/50`"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Consuming an ingredient: `consume`"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "Decrease the number of units of an ingredient or multiple ingredients. +"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `consume n/INGREDIENT_NAME... u/NUMBER_OF_UNITS...`"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "* NUMBER_OF_UNITS for an ingredient must follow the INGREDIENT_NAME for that particular ingredient."
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "* `consume n/cod fish u/1`"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "* `consume n/chicken thigh u/2 n/fries u/1`"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Removing out-of-stock dishes from daily menu: `remove-oos-dish`"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "Removes out-of-stock dishes that require ingredients with low stock count from the daily menu. +"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `remove-oos-dish`"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Show history of stockup or consumption: `history`"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "Shows the history of past ingredient stockups or past ingredient consumption. +"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `history [stockup] [consumption]`"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "* At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Adding an item to the menu: `add-item`"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "yican95"
        },
        "content": "Adds an item to the menu +"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "yican95"
        },
        "content": "Format: `add-item n/ITEM_NAME p/ITEM_PRICE [t/TAG]...`"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "yican95"
        },
        "content": "* ITEM_NAME and ITEM_PRICE must be provided."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "yican95"
        },
        "content": "* An item can have any number of tags (including 0)"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "yican95"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `add-item n/Burger p/2`"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `add-item n/Burger Set p/4.5 t/Set`"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Listing all items in the menu : `list-items`"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "yican95"
        },
        "content": "Shows a list of all items in the menu. +"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "yican95"
        },
        "content": "Format: `list-items`"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Editing an item in the menu : `edit-item`"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "yican95"
        },
        "content": "Edits an existing item in the menu. +"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "yican95"
        },
        "content": "Format: `edit-item INDEX [n/ITEM_NAME] [p/ITEM_PRICE] [t/TAG]...` or `edit-item NAME [n/ITEM_NAME] [p/ITEM_PRICE]"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "yican95"
        },
        "content": "[t/TAG]...`"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Edits the item at the specified `INDEX`. The index refers to the index number shown in the displayed item list. The"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "yican95"
        },
        "content": "index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "yican95"
        },
        "content": "* At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Existing values will be updated to the input values."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "yican95"
        },
        "content": "* When editing tags, the existing tags of the item will be removed i.e adding of tags is not cumulative."
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "yican95"
        },
        "content": "* You can remove all the item\u0027s tags by typing `t/` without specifying any tags after it."
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Alternatively, edits the item with the specified `NAME`."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "yican95"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `edit-item 1 n/burger p/3` +"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "yican95"
        },
        "content": "Edits the name and price of the 1st item to be `burger` and `3` respectively."
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `edit-item 2 p/4 t/` +"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "yican95"
        },
        "content": "Edits the price of the 2nd item to be `4` and clears all existing tags."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Deleting an item : `delete-item`"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "yican95"
        },
        "content": "Deletes the specified item from the menu. +"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "yican95"
        },
        "content": "Format: `delete-item INDEX` or `delete-item NAME`"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Deletes the item at the specified `INDEX`."
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "yican95"
        },
        "content": "* The index refers to the index number shown in the displayed item list."
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "yican95"
        },
        "content": "* The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Alternatively, deletes the item with the specified `NAME`."
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "yican95"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `list-items` +"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "yican95"
        },
        "content": "`delete-item 2` +"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "yican95"
        },
        "content": "Deletes the 2nd item in the menu."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `find-item Cheese` +"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "yican95"
        },
        "content": "`delete-item 1` +"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "yican95"
        },
        "content": "Deletes the 1st item in the results of the `find` command."
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Locating items by name: `find-item`"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "yican95"
        },
        "content": "Finds items whose names contain any of the given keywords. +"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "yican95"
        },
        "content": "Format: `find-item KEYWORD [MORE_KEYWORDS]`"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "yican95"
        },
        "content": "* The search is case insensitive. e.g `burger` will match `Burger`"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "yican95"
        },
        "content": "* The order of the keywords does not matter. e.g. `Cheese Burger` will match `Burger Cheese`"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Only the name is searched."
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Only full words will be matched e.g. `Bur` will not match `Burger`"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Items matching at least one keyword will be returned (i.e. `OR` search). e.g. `Cheese Burger` will return"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "yican95"
        },
        "content": "`Cheese Fries`,`Cheese Cake`"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "yican95"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `find-item Burger` +"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "yican95"
        },
        "content": "Returns `burger` and `Cheese Burger`"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `find-item Cheese Chocolate Fruit` +"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "yican95"
        },
        "content": "Returns any item having names `Cheese`, `Chocolate`, or `Fruit`"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Filter menu by tag: `filter-menu`"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "yican95"
        },
        "content": "Finds items that contain the given tag in the menu. +"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "yican95"
        },
        "content": "Format: `filter-menu t/TAG`"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "yican95"
        },
        "content": "* The search is case insensitive. e.g `burger` will match `Burger`"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Only filter by tag."
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Only full words will be matched e.g. `Bur` will not match `Burger`"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Items matching at least one keyword will be returned (i.e. `OR` search). e.g. `Cheese Burger` will return"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "yican95"
        },
        "content": "`Cheese Fries`,`Cheese Cake`"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "yican95"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `filter-menu t/monday` +"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "yican95"
        },
        "content": "Returns any item that contains tag `monday`"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `filter-menu t/set` +"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "yican95"
        },
        "content": "Returns any item that contains tag `set`"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Sort menu : `sort-menu`"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "yican95"
        },
        "content": "Sort the menu by name or tags. +"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "yican95"
        },
        "content": "Format: `sort-menu [sm/NAME] [sm/TAG]`"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Sort the menu by name or tag."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Only one of the sorting method should be provided."
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "yican95"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `sort-menu sm/NAME` +"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "yican95"
        },
        "content": "Sorts the menu by item name."
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `sort-menu sm/TAG` +"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "yican95"
        },
        "content": "Sorts the menu by item tags."
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Clearing all entries : `clear-menu`"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "yican95"
        },
        "content": "Clears all entries from the menu. +"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "yican95"
        },
        "content": "Format: `clear-menu`"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Giving a discount to an item : `discount-item`"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "yican95"
        },
        "content": "Gives the item identified by the index number used in the displayed item list a discount. +"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "yican95"
        },
        "content": "Format: `discount-item INDEX|ALL d/PERCENTAGE`"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "yican95"
        },
        "content": "* Gives the item at the specified `INDEX` a discount based on the percentage."
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "yican95"
        },
        "content": "* If the item is already on discount, it will update the new discounted price."
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "yican95"
        },
        "content": "* The index refers to the index number shown in the displayed person list."
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "yican95"
        },
        "content": "* The index *must be a positive integer* `1, 2, 3, ...`"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "yican95"
        },
        "content": "* You can remove discount by typing `0` for the percentage."
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "yican95"
        },
        "content": "* You can give a discount to the whole menu by typing `ALL` instead of a specified `INDEX`."
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "yican95"
        },
        "content": "****"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "yican95"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `list-items` +"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "yican95"
        },
        "content": "`discount-item 2` +"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "yican95"
        },
        "content": "Discount the 2nd item in the menu."
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `find-item Cheese` +"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "yican95"
        },
        "content": "`discount-item 1` +"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "yican95"
        },
        "content": "Discounts the 1st item in the results of the `find` command."
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Today\u0027s specials : `today-special`"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "yican95"
        },
        "content": "Lists the items that have been tagged with the particular day in the menu. +"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "yican95"
        },
        "content": "Format: `today-special`"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "yican95"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `today-special` +"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "yican95"
        },
        "content": "If today is Monday +"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "yican95"
        },
        "content": "List the items that have been tagged with `Monday` in the menu."
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Export menu : `export-menu`"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "yican95"
        },
        "content": "Exports the menu to a particular file path. +"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "yican95"
        },
        "content": "Format: `export-menu fp/FILEPATH fn/FILENAME`"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "yican95"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `export-menu f/test/ n/menu.txt` +"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "yican95"
        },
        "content": "Export the menu to test folder with the file name `menu.txt`"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "yican95"
        },
        "content": "\u003d\u003d\u003d Import menu : `import-menu`"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "yican95"
        },
        "content": "Imports an existing menu from specified file path to replace current menu. +"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "yican95"
        },
        "content": "Format: `import-menu fp/FILEPATH fn/FILENAME`"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "yican95"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "yican95"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "yican95"
        },
        "content": "* `import-menu f/test/ n/menu.txt` +"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "yican95"
        },
        "content": "Import the menu.txt from test folder to replace current menu."
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e d8104eeac35a224217ba9b7331cb65179fd57082"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "\u003d\u003d\u003d Adding a reservation: `add-reservation`"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Adds a new reservation to the reservations list. +"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Format: `add-reservation n/NAME p/PAX d/DATE t/TIME`"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "****"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* Date is entered in DDMMYYYY format."
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* Time is entered in Military Time."
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "****"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* `add-reservation n/TAN p/4 d/21072018 t/1300`"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "\u003d\u003d\u003d Listing all reservations : `list-reservations`"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Shows a list of all reservations in the reservations list. +"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Format: `list-reservations`"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "\u003d\u003d\u003d Editing a reservation: `edit-reservation`"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Edits an reservation in the reservation list. +"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Format: `edit-reservation INDEX [n/NAME] [p/PAX] [d/DATE] [t/TIME]`"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "****"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* Edits the reservation at the specified `INDEX`. The index refers to the index number shown in the"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "displayed reservations list. The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* Existing values will be updated to the input values."
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "****"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* `edit-reservation 2 t/1700` +"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Edits the time of the 2nd reservation in the list to `1700` hrs."
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* `edit-reservation 6 n/ONG p/4`  +"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Edits the name and pax of the 6th reservation to `ONG` and `4` respectively."
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "\u003d\u003d\u003d Sorting reservations list: `sort-reservations`"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Sorts the reservations list by Date/Time. +"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Format: `sort-reservations`"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "\u003d\u003d\u003d Deleting a reservation: `delete-reservation`"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Deletes the specified reservation from the reservations list. +"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Format: `delete-reservation INDEX`"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "****"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* Deletes the reservation at the specified `INDEX`."
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* The index refers to the index number shown in the displayed reservations list."
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "****"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* `list-reservations` +"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "`delete-reservations 2` +"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "`list-ingredients` +"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "Deletes the 2nd reservation in the reservations list."
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "m4dkip"
        },
        "content": ""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "\u003d\u003d\u003d Recording daily sales volume of a menu item: `record-sales`"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Records the quantity of a menu item sold within the specified day into the day\u0027s sales report. +"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Format: `record-sales d/DATE n/ITEM_NAME q/QUANTITY SOLD p/ITEM_PRICE`"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "****"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "* Appends the above record onto the sales report for the day."
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* A sales report will automatically be created if the day does not have one."
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "* DATE must be written in the DD/MM/YYYY format."
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "* ITEM_NAME must be unique in the sales report for the selected day."
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "****"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* `record-sales d/25-09-2018 n/Fried Rice q/35 p/5.50`"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "\u003d\u003d\u003d Display sales report: `display-sales`"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "Displays the sales report for all days. +"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Format: `display-sales` +"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "OR +"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "Displays the sales report for the specified day. +"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Format: `display-sales DATE`"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "****"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "* DATE must be written in the DD/MM/YYYY format."
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "****"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* `display-sales` +"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "Displays the sales report for all days. +"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* `display-sales 25-09-2018` +"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "Displays the sales report dated 25-09-2018."
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "\u003d\u003d\u003d Deleting a sales record / report: `delete-sales`"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "Deletes a menu item\u0027s sales record in the sales report for the specified day. +"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Format: `delete-sales DATE ITEM_NAME` / `delete-sales DATE ITEM_INDEX` +"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "OR +"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Deletes the entire sales report for the specified day. +"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Format: `delete-sales DATE`"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "****"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* Deletes the record at the specified `ITEM_INDEX`."
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* The item index refers to the index number shown in the sales report for the specified day."
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* Alternatively, deletes the sales record with the specified `ITEM_NAME`."
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* Alternatively, deletes the entire sales report for the specified day by omitting the record identifier."
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "****"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* `display-sales` +"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "`delete-sales 25-09-2018 2` +"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "`display-sales` +"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Deletes the 2nd record from the sales report dated 25-09-2018."
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* `delete-sales 10-02-2018 Fried Rice` +"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "`display-sales` +"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Deletes the sales record for `Fried Rice` from the sales report dated 10-02-2018."
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* `delete-sales 23-06-2018` +"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Deletes the entire sales report dated 23-06-2018."
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "\u003d\u003d\u003d Editing a sales record: `edit-sales`"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "Edit a menu item\u0027s sales record in the sales report for the specified day. +"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Format: `edit-sales DATE NAME [n/ITEM_NAME] [q/QUANTITY SOLD] [p/ITEM_PRICE]` / `edit-sales DATE INDEX [n/ITEM_NAME]"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "[q/QUANTITY SOLD] [p/ITEM_PRICE]`"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "****"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* Edits the record at the specified `INDEX`. The index refers to the index number shown in the sales report for the"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "specified day. The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* Existing values will be updated to the input values."
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* Alternatively, edits the sales record with the specified `NAME`."
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "****"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* `edit-sales 23-06-2018 Fried Rice n/Fried Rice with Shrimps` +"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "In the sales report dated 23-06-2018, edits the name of \"Fried Rice\" to be \"Fried Rice with Shrimps\"."
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* `edit-sales 12-02-2018 Pasta q/37 p/6.50`  +"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "In the sales report dated 12-02-2018, edits the quantity sold and price of \"Pasta\" to be 37 and 6.50 respectively."
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* `edit-sales 01-01-2018 3 n/Fried Omelet`  +"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "In the sales report dated 01-01-2018, edits the menu item\u0027s name of the 3rd record to be \"Fried Omelet\"."
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "\u003d\u003d\u003d Checking sales history of a menu item: `check-sales`"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "Displays the sales history of a menu item and the total revenue it has accumulated. +"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Format: `check-sales ITEM_NAME` +"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* `check-sales Fried Rice`"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "\u003d\u003d\u003d Ranking menu items according to profitability: `rank-dish`"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "Ranks the menu items based on their total revenue accumulated in past sales records in descending order. +"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Format: `rank-dish`"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": ""
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "\u003d\u003d\u003d Ranking dates according to profitability: `rank-date`"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "Ranks the dates based on their revenue accumulated in past sales records in descending order. +"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "Format: `rank-date`"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d FAQ"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*Q: How do I transfer my data to another Computer?* +"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "*A*: Install the application in the other computer and overwrite the empty data file it creates with the file that"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "contains the data of your previous *MeNUS* folder."
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Command Summary"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "* *Add* `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]...` +"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "* *Clear* : `clear`"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "* *Delete* : `delete INDEX` +"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `delete 3`"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "* *Edit* : `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]...` +"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `edit 2 n/James Lee e/jameslee@example.com`"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "* *Find* : `find KEYWORD [MORE_KEYWORDS]` +"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `find James Jake`"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "* *List* : `list`"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "* *Help* : `help`"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "* *Select* : `select INDEX` +"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "e.g.`select 2`"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "* *History* : `history`"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "* *Undo* : `undo`"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "* *Redo* : `redo`"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* *Logging in*: `login id/USERNAME pw/PASSWORD`"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* *Logging out*: `logout`"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* *Creating user account*: `create-account id/USERNAME pw/PASSWORD r/ROLE_ID`"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* *Editing user account*: `edit-account id/USERNAME [nid/NEW_USERNAME] [pw/NEW_PASSWORD] [r/NEW_ROLE_ID]`"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* *Deleting user account*: `delete-account id/USERNAME`"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* *Listing user accounts*: `list-account`"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* *Creating user role*: `create-role id/ROLE_ID n/ROLE_NAME`"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* *Editing user role*: `edit-role id/ROLE_ID [nid/NEW_ROLE_ID] [n/NEW_ROLE_NAME]`"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* *Deleting user role*: `delete-role id/ROLE_ID`"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "* *Listing user roles*: `list-role`"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "* *Add ingredient* : `add-ingredient n/INGREDIENT_NAME t/UNIT_TYPE p/PRICE_PER_UNIT m/MINIMUM` +"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `add-ingredient n/cod fish t/kilogram p/20 m/1`"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "* *List ingredients* : `list-ingredients`"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "* *List ingredients with low stock count* : `list-ingredients-low`"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "* *Delete ingredient* : `delete-ingredient INDEX` or `delete-ingredient NAME` +"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `delete-ingredient 1` or `delete-ingredient cod fish`"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "* *Edit ingredient* : `edit-ingredient INDEX [n/INGREDIENT_NAME] [t/UNIT_TYPE] [p/PRICE_PER_UNIT] [m/MINIMUM]` or `edit-ingredient NAME [n/INGREDIENT_NAME] [t/UNIT_TYPE] [p/PRICE_PER_UNIT] [m/MINIMUM]` +"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `edit-ingredient 3 n/thin fries` or `edit-ingredient ketchup n/tomato ketchup`"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "* *Stock up* : `stockup n/INGREDIENT_NAME... u/NUMBER_OF_UNITS...` +"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `stockup n/cod fish u/5`"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "* *Consume* : `consume n/INGREDIENT_NAME... u/NUMBER_OF_UNITS...` +"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `consume n/cod fish u/1`"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "* *Remove dishes with low ingredients* : `remove-oos-dish`"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "* *History of stockup/consumption* : `history [purchase] [consumption]` +"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `history stockup`"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "yican95"
        },
        "content": "* *Add item* `add-item n/ITEM_NAME p/ITEM_PRICE [t/TAG]...` +"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "yican95"
        },
        "content": "e.g. `add-item n/Burger Set p/3 t/set`"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "yican95"
        },
        "content": "* *Clear menu* : `clear-menu`"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "yican95"
        },
        "content": "* *Delete item* : `delete-item INDEX` +"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "yican95"
        },
        "content": "e.g. `delete-item 3`"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "yican95"
        },
        "content": "* *Edit item* : `edit-item INDEX [n/ITEM_NAME] [p/ITEM_PRICE] [t/TAG]...` +"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "yican95"
        },
        "content": "e.g. `edit-item 2 n/Fries p/3`"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "yican95"
        },
        "content": "* *Find item* : `find-item KEYWORD [MORE_KEYWORDS]` +"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "yican95"
        },
        "content": "e.g. `find-item Cheese Burger`"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "yican95"
        },
        "content": "* *List items* : `list-items`"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "yican95"
        },
        "content": "* *Filter menu* : `fiiter-menu t/TAG` +"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "yican95"
        },
        "content": "e.g. `filter-menu t/cheese`"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "yican95"
        },
        "content": "* *Sort menu* : `sort-menu`"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "yican95"
        },
        "content": "e.g. `sort-menu sm/NAME`"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "yican95"
        },
        "content": "* *Give an item a discount* : `discount-item`"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "yican95"
        },
        "content": "e.g. `discount-item 2 d/20`"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "yican95"
        },
        "content": "* *Today\u0027s special* : `today-special`"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "yican95"
        },
        "content": "* *Export menu* : `export-menu`"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "yican95"
        },
        "content": "e.g. `export-menu fp/backup/ fn/menu.txt`"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "yican95"
        },
        "content": "* *Import menu* : `import-menu`"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "yican95"
        },
        "content": "e.g. `import-menu fp/backup/ fn/menu.txt`"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* *Add a reservation* : `add-reservation n/NAME p/PAX d/DATE t/TIME` +"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "e.g. `add-reservation n/TAN p/4 d/21072018 t/1300`"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* *List reservations* : `list-reservations`"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* *Edit reservation* : `edit-reservation INDEX [n/NAME] [p/PAX] [d/DATE] [t/TIME]` +"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "e.g. `edit-reservation 2 t/1700`"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* *Sort reservations* : `sort-reservations`"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "* *Delete a reservation* : `delete-reservation INDEX` +"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "m4dkip"
        },
        "content": "e.g. `delete-reservations 2`"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* *Record sales volume of menu item* : `record-sales d/DATE n/ITEM_NAME q/QUANTITY SOLD p/ITEM_PRICE` +"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "e.g. `record-sales d/25-09-2018 n/Fried Rice q/35 p/5.50`"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* *Display sales report for all / specific day* : `display-sales` or `display-sales DATE` +"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "e.g. `display-sales` or `display-sales 25-09-2018`"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* *Delete sales record* : `delete-sales DATE ITEM_NAME` or `delete-sales DATE ITEM_INDEX` +"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "e.g. `delete-sales 10-02-2018 Fried Rice` or `delete-sales 25-09-2018 2`"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* *Delete sales report* : `delete-sales DATE` +"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "e.g. `delete-sales 23-06-2018`"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* *Edit sales record* : `edit-sales DATE NAME [n/ITEM_NAME] [q/QUANTITY SOLD] [p/ITEM_PRICE]` or `edit-sales DATE"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "INDEX [n/ITEM_NAME] [q/QUANTITY SOLD] [p/ITEM_PRICE]` +"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "e.g. `edit-sales 12-02-2018 Pasta q/37 p/6.50` or `edit-sales 01-01-2018 3 n/Fried Omelet`"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* *Check sales history of menu item* : `check-sales ITEM_NAME` +"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "e.g. `check-sales Fried Rice`"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* *Rank menu items according to profitability* : `rank-dish` +"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "HyperionNKJ"
        },
        "content": "* *Rank dates according to profitability* : `rank-date`"
      }
    ],
    "authorContributionMap": {
      "yican95": 201,
      "HyperionNKJ": 110,
      "m4dkip": 72,
      "-": 389,
      "AZhiKai": 157
    }
  },
  {
    "path": "src/main/java/seedu/address/model/AddressBook.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.UniquePersonList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": " * Wraps all data at the address-book level Duplicates are not allowed (by .isSamePerson comparison)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBook implements ReadOnlyAddressBook {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private final UniquePersonList persons;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * The \u0027unusual\u0027 code block below is an non-static initialization block, sometimes used to avoid duplication"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     *   among constructors."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        persons \u003d new UniquePersonList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddressBook() {}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an AddressBook using the Persons in the {@code toBeCopied}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddressBook(ReadOnlyAddressBook toBeCopied) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        resetData(toBeCopied);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    //// list overwrite operations"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * Replaces the contents of the person list with {@code persons}. {@code persons} must not contain duplicate"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * persons."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPersons(List\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        this.persons.setPersons(persons);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the existing data of this {@code AddressBook} with {@code newData}."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData(ReadOnlyAddressBook newData) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(newData);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        setPersons(newData.getPersonList());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    //// person-level operations"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a person with the same identity as {@code person} exists in the address book."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(person);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return persons.contains(person);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * Adds a person to the address book. The person must not already exist in the address book."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addPerson(Person p) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        persons.add(p);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * Replaces the given person {@code target} in the list with {@code editedPerson}. {@code target} must exist in the"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * address book. The person identity of {@code editedPerson} must not be the same as another existing person in the"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * address book."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updatePerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(editedPerson);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        persons.setPerson(target, editedPerson);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address book."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public void removePerson(Person key) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        persons.remove(key);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * Removes {@code tag} from {@code person} in this {@code AddressBook}."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * @param person whose tag is being removed."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * @param tag to be removed."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    private void removeTagForPerson(Person person, Tag tag) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(person.getTags());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        if (!tags.remove(tag)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        Person newPerson \u003d new Person(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "                tags);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        updatePerson(person, newPerson);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * Removes {@code tag} from all {@code person} in this {@code AddressBook}."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * @param tag to be removed."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    public void removeTag(Tag tag) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        persons.forEach(person -\u003e removeTagForPerson(person, tag));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    //// util methods"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        return persons.asUnmodifiableObservableList().size() + \" persons\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: refine later"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e getPersonList() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        return persons.asUnmodifiableObservableList();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof AddressBook // instanceof handles nulls"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 persons.equals(((AddressBook) other).persons));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        return persons.hashCode();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 109,
      "AZhiKai": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Model.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * The API of the Model component."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Model {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * {@code Predicate} that always evaluate to true"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * Clears existing backing model and replaces with the provided new data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    void resetData(ReadOnlyAddressBook newData);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * Returns the AddressBook"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyAddressBook getAddressBook();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a person with the same identity as {@code person} exists in the address book."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    boolean hasPerson(Person person);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * Deletes the given person. The person must exist in the address book."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    void deletePerson(Person target);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * Adds the given person. {@code person} must not already exist in the address book."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    void addPerson(Person person);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * Replaces the given person {@code target} with {@code editedPerson}. {@code target} must exist in the address"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * book. The person identity of {@code editedPerson} must not be the same as another existing person in the address"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * book."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    void updatePerson(Person target, Person editedPerson);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * Removes the given {@code tag} from all {@code Person}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * @param tag to be removed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    void removeTag(Tag tag);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     * Returns an unmodifiable view of the filtered person list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cPerson\u003e getFilteredPersonList();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the filter of the filtered person list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the model has previous address book states to restore."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    boolean canUndoAddressBook();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the model has undone address book states to restore."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    boolean canRedoAddressBook();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores the model\u0027s address book to its previous state."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    void undoAddressBook();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores the model\u0027s address book to its previously undone state."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    void redoAddressBook();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves the current address book state for undo/redo."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    void commitAddressBook();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 67,
      "AZhiKai": 27
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelManager.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.ComponentManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.events.model.AddressBookChangedEvent;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the in-memory model of the address book data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManager extends ComponentManager implements Model {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private final VersionedAddressBook versionedAddressBook;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private final FilteredList\u003cPerson\u003e filteredPersons;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes a ModelManager with the given addressBook and userPrefs."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager(ReadOnlyAddressBook addressBook, UserPrefs userPrefs) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(addressBook, userPrefs);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook \u003d new VersionedAddressBook(addressBook);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredPersons \u003d new FilteredList\u003c\u003e(versionedAddressBook.getPersonList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        this(new AddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData(ReadOnlyAddressBook newData) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.resetData(newData);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        indicateAddressBookChanged();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return versionedAddressBook;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Raises an event to indicate the model has changed */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private void indicateAddressBookChanged() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        raise(new AddressBookChangedEvent(versionedAddressBook));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(person);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        return versionedAddressBook.hasPerson(person);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deletePerson(Person target) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.removePerson(target);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        indicateAddressBookChanged();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addPerson(Person person) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.addPerson(person);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        indicateAddressBookChanged();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updatePerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(target, editedPerson);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.updatePerson(target, editedPerson);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        indicateAddressBookChanged();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    public void removeTag(Tag tag) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        versionedAddressBook.removeTag(tag);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code versionedAddressBook}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        return FXCollections.unmodifiableObservableList(filteredPersons);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredPersons.setPredicate(predicate);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo/Redo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean canUndoAddressBook() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        return versionedAddressBook.canUndo();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean canRedoAddressBook() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        return versionedAddressBook.canRedo();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public void undoAddressBook() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.undo();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        indicateAddressBookChanged();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    public void redoAddressBook() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.redo();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        indicateAddressBookChanged();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    public void commitAddressBook() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        versionedAddressBook.commit();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof ModelManager)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager other \u003d (ModelManager) obj;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        return versionedAddressBook.equals(other.versionedAddressBook)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 filteredPersons.equals(other.filteredPersons);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 150,
      "AZhiKai": 6
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddCommandTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Rule;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.rules.ExpectedException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final CommandHistory EMPTY_COMMAND_HISTORY \u003d new CommandHistory();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Rule"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpectedException thrown \u003d ExpectedException.none();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandHistory commandHistory \u003d new CommandHistory();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_nullPerson_throwsNullPointerException() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(NullPointerException.class);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        new AddCommand(null);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_personAcceptedByModel_addSuccessful() throws Exception {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Person validPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub, commandHistory);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.feedbackToUser);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(EMPTY_COMMAND_HISTORY, commandHistory);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePerson_throwsCommandException() throws Exception {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        Person validPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(validPerson);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(CommandException.class);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expectMessage(AddCommand.MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        addCommand.execute(modelStub, commandHistory);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommand \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addBobCommand \u003d new AddCommand(bob);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommand));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommandCopy));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(1));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(null));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(addBobCommand));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        public void resetData(ReadOnlyAddressBook newData) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        public void deletePerson(Person target) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        public void updatePerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        public void removeTag(Tag tag) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean canUndoAddressBook() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean canRedoAddressBook() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        public void undoAddressBook() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        public void redoAddressBook() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        public void commitAddressBook() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "     * A Model stub that contains a single person."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStubWithPerson extends ModelStub {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        private final Person person;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStubWithPerson(Person person) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            this.person \u003d person;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.person.isSamePerson(person);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     * A Model stub that always accept the person being added."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStubAcceptingPersonAdded extends ModelStub {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            return personsAdded.stream().anyMatch(person::isSamePerson);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            personsAdded.add(person);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        public void commitAddressBook() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            // called by {@code AddCommand#execute()}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddressBook();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 204,
      "AZhiKai": 9
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/CommandTestUtil.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.CommandHistory;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains helper methods for testing commands."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandTestUtil {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_PHONE_AMY \u003d \"11111111\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_PHONE_BOB \u003d \"22222222\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_TAG_HUSBAND \u003d \"husband\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_TAG_FRIEND \u003d \"friend\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    public static final String VALID_TAG_TEST \u003d \"test\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final EditCommand.EditPersonDescriptor DESC_AMY;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final EditCommand.EditPersonDescriptor DESC_BOB;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the result message matches {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the {@code actualModel} matches {@code expectedModel} \u003cbr\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the {@code actualCommandHistory} remains unchanged."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, CommandHistory actualCommandHistory,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            String expectedMessage, Model expectedModel) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandHistory expectedCommandHistory \u003d new CommandHistory(actualCommandHistory);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult result \u003d command.execute(actualModel, actualCommandHistory);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedMessage, result.feedbackToUser);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedModel, actualModel);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedCommandHistory, actualCommandHistory);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException ce) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"Execution of command should not fail.\", ce);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * - a {@code CommandException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the address book and the filtered person list in the {@code actualModel} remain unchanged \u003cbr\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * - {@code actualCommandHistory} remains unchanged."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandFailure(Command command, Model actualModel, CommandHistory actualCommandHistory,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            String expectedMessage) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        // we are unable to defensively copy the model for comparison later, so we can"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        // only do so by copying its components."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandHistory expectedCommandHistory \u003d new CommandHistory(actualCommandHistory);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            command.execute(actualModel, actualCommandHistory);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"The expected CommandException was not thrown.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedMessage, e.getMessage());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedAddressBook, actualModel.getAddressBook());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedCommandHistory, actualCommandHistory);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code model}\u0027s address book."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showPersonAtIndex(Model model, Index targetIndex) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, model.getFilteredPersonList().size());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes the first person in {@code model}\u0027s filtered list from {@code model}\u0027s address book."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void deleteFirstPerson(Model model) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        Person firstPerson \u003d model.getFilteredPersonList().get(0);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        model.deletePerson(firstPerson);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        model.commitAddressBook();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 141,
      "AZhiKai": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/model/AddressBookTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TEST;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.ALICE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.AMY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.BOB;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.DYLAN;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Rule;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.rules.ExpectedException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.exceptions.DuplicatePersonException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import seedu.address.testutil.AddressBookBuilder;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookTest {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Rule"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpectedException thrown \u003d ExpectedException.none();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBook addressBook \u003d new AddressBook();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    private AddressBook addressBookWithPersons \u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Collections.emptyList(), addressBook.getPersonList());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(NullPointerException.class);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.resetData(null);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData_withValidReadOnlyAddressBook_replacesData() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook newData \u003d getTypicalAddressBook();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.resetData(newData);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(newData, addressBook);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        // Two persons with the same identity fields"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBookStub newData \u003d new AddressBookStub(newPersons);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(DuplicatePersonException.class);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.resetData(newData);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_nullPerson_throwsNullPointerException() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(NullPointerException.class);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.hasPerson(null);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_personNotInAddressBook_returnsFalse() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addressBook.hasPerson(ALICE));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_personInAddressBook_returnsTrue() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addPerson(ALICE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addressBook.hasPerson(ALICE));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addPerson(ALICE);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addressBook.hasPerson(editedAlice));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getPersonList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(UnsupportedOperationException.class);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.getPersonList().remove(0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    public void removeTag_noSuchTag_addressBookUnmodified() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        addressBookWithPersons \u003d new AddressBookBuilder().withPerson(AMY).withPerson(BOB).build();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        addressBookWithPersons.removeTag(new Tag(VALID_TAG_TEST));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        AddressBook expectedAddressBook \u003d new AddressBookBuilder().withPerson(AMY).withPerson(BOB).build();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        assertEquals(addressBookWithPersons, expectedAddressBook);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    public void removeTag_fromAllPersons_addressBookModified() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        addressBookWithPersons \u003d new AddressBookBuilder().withPerson(AMY).withPerson(BOB).build();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        addressBookWithPersons.removeTag(new Tag(VALID_TAG_FRIEND));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        Person amyWithoutTags \u003d new PersonBuilder(AMY).withTags().build();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        Person bobWithoutFriendTag \u003d new PersonBuilder(BOB).withTags(VALID_TAG_HUSBAND).build();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        AddressBook expectedAddressBook \u003d new AddressBookBuilder().withPerson(amyWithoutTags)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "                .withPerson(bobWithoutFriendTag)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        assertEquals(addressBookWithPersons, expectedAddressBook);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    public void removeTag_fromOnePerson_addressBookModified() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        addressBookWithPersons \u003d new AddressBookBuilder().withPerson(AMY).withPerson(DYLAN).build();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        addressBookWithPersons.removeTag(new Tag(VALID_TAG_FRIEND));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        Person amyWithoutTags \u003d new PersonBuilder(AMY).withTags().build();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        AddressBook expectedAddressBook \u003d new AddressBookBuilder().withPerson(amyWithoutTags)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "                .withPerson(DYLAN)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        assertEquals(addressBookWithPersons, expectedAddressBook);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    private static class AddressBookStub implements ReadOnlyAddressBook {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBookStub(Collection\u003cPerson\u003e persons) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            this.persons.setAll(persons);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableList\u003cPerson\u003e getPersonList() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            return persons;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 110,
      "AZhiKai": 51
    }
  },
  {
    "path": "src/test/java/seedu/address/model/ModelManagerTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.Assert.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TEST;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.ALICE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.AMY;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.BENSON;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.BOB;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.DYLAN;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Rule;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.rules.ExpectedException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.AddressBookBuilder;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManagerTest {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Rule"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpectedException thrown \u003d ExpectedException.none();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    private AddressBook addressBookWithPersons \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_nullPerson_throwsNullPointerException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(NullPointerException.class);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.hasPerson(null);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_personNotInAddressBook_returnsFalse() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(modelManager.hasPerson(ALICE));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hasPerson_personInAddressBook_returnsTrue() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.addPerson(ALICE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(modelManager.hasPerson(ALICE));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        thrown.expect(UnsupportedOperationException.class);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.getFilteredPersonList().remove(0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    public void removeTag_noSuchTag_addressBookUnmodified() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        addressBookWithPersons \u003d new AddressBookBuilder().withPerson(AMY).withPerson(BOB).build();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        ModelManager unmodifiedModelManager \u003d new ModelManager(addressBookWithPersons, new UserPrefs());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        unmodifiedModelManager.removeTag(new Tag(VALID_TAG_TEST));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        ModelManager expectedModelManager \u003d new ModelManager(addressBookWithPersons, new UserPrefs());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        assertEquals(unmodifiedModelManager, expectedModelManager);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    public void removeTag_fromAllPersons_addressBookModified() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        addressBookWithPersons \u003d new AddressBookBuilder().withPerson(AMY).withPerson(BOB).build();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        ModelManager modifiedModelManager \u003d new ModelManager(addressBookWithPersons, userPrefs);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        modifiedModelManager.removeTag(new Tag(VALID_TAG_FRIEND));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        Person amyWithoutTags \u003d new PersonBuilder(AMY).withTags().build();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        Person bobWithoutFriendTag \u003d new PersonBuilder(BOB).withTags(VALID_TAG_HUSBAND).build();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        ModelManager expectedModelManager \u003d new ModelManager(addressBookWithPersons, userPrefs);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        // Cannot init a new AddressBook due to difference in addressBookStateList"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        expectedModelManager.updatePerson(AMY, amyWithoutTags);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        expectedModelManager.updatePerson(BOB, bobWithoutFriendTag);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        assertEquals(modifiedModelManager, expectedModelManager);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    public void removeTag_fromOnePerson_addressBookModified() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        addressBookWithPersons \u003d new AddressBookBuilder().withPerson(AMY).withPerson(DYLAN).build();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        ModelManager modifiedModelManager \u003d new ModelManager(addressBookWithPersons, new UserPrefs());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        modifiedModelManager.removeTag(new Tag(VALID_TAG_FRIEND));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        Person amyWithoutTags \u003d new PersonBuilder(AMY).withTags().build();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        ModelManager expectedModelManager \u003d new ModelManager(addressBookWithPersons, new UserPrefs());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        expectedModelManager.updatePerson(AMY, amyWithoutTags);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "        assertEquals(modifiedModelManager, expectedModelManager);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook differentAddressBook \u003d new AddressBook();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager \u003d new ModelManager(addressBook, userPrefs);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(modelManager.equals(modelManagerCopy));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(modelManager.equals(modelManager));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(modelManager.equals(null));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(modelManager.equals(5));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        // different addressBook -\u003e returns false"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        // different filteredList -\u003e returns false"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        // resets modelManager to initial state for upcoming tests"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        // different userPrefs -\u003e returns true"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs differentUserPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 84,
      "AZhiKai": 58
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/AddressBookBuilder.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": " * A utility class to help with building AddressBook objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Example usage: \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookBuilder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private AddressBook addressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddressBookBuilder() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook \u003d new AddressBook();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddressBookBuilder(AddressBook addressBook) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.addressBook \u003d addressBook;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds a new {@code Person} to the {@code AddressBook} that we are building."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddressBookBuilder withPerson(Person person) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addPerson(person);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddressBook build() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return addressBook;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 33,
      "AZhiKai": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalPersons.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class containing a list of {@code Person} objects to be used in tests."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class TypicalPersons {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            .withPhone(\"94351253\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(\"friends\").build();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"311, Clementi Ave 2, #02-25\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(\"owesMoney\", \"friends\").build();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    // Manually added"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    // Manually added - Person\u0027s details found in {@code CommandTestUtil}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "    public static final Person DYLAN \u003d new PersonBuilder().withName(\"Dylan\").withPhone(\"98988787\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "            .withEmail(\"dylan@example.com\").withAddress(\"7th avenue\").withTags(VALID_TAG_HUSBAND)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AZhiKai"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private TypicalPersons() {} // prevents instantiation"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an {@code AddressBook} with all the typical persons."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public static AddressBook getTypicalAddressBook() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook ab \u003d new AddressBook();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Person person : getTypicalPersons()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            ab.addPerson(person);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return ab;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cPerson\u003e getTypicalPersons() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 76,
      "AZhiKai": 3
    }
  }
]
